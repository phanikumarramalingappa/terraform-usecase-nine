name: Infra Provisioning and AppDepoyment

on:
  push:
    branches: [ main ]
    paths:
      - '**.tf'
      - 'app/**'
      - '.github/workflows/**'
permissions:
  id-token: write
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Code checkout
        uses: actions/checkout@v4.2.2
        with: 
          ref: ${{ github.head_ref }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: SetUp AWS
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.OIDC_ROLE }}

      - name: Build and push
        run: |
          pwd
          aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 911891700576.dkr.ecr.ap-south-1.amazonaws.com
          docker build -t python-eks-kubernetes -f ./modules/app/Dockerfile ./modules/app
          docker tag python-eks-kubernetes:latest 911891700576.dkr.ecr.ap-south-1.amazonaws.com/python-kubernetes:latest
          docker push 911891700576.dkr.ecr.ap-south-1.amazonaws.com/python-kubernetes:latest

  terraform:
    needs: build
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: .

    steps:
      - name: Code checkout
        uses: actions/checkout@v4.2.2
        with: 
          ref: ${{ github.head_ref }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: SetUp AWS
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.OIDC_ROLE }}

      - name: Initiate terraform
        run: |
          terraform init
          terraform fmt -recursive
          terraform validate
          terraform plan
          terraform apply -auto-approve

  kubernetes:
    needs: terraform
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: .

    steps:
      - name: Code checkout
        uses: actions/checkout@v4.2.2
        with: 
          ref: ${{ github.head_ref }}

      - name: SetUp AWS
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.OIDC_ROLE }}

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region ap-south-1 --name eks-cluster

      - name: Verify Cluster Access
        run: |
          kubectl get nodes -o wide
          kubectl get svc -o wide
          kubectl get pods -o wide

      - name: EKS Deploymen of flask
        run: |
          kubectl apply -f ./modules/app/deployment.yaml
          kubectl apply -f ./modules/app/service.yaml
